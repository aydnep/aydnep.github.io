"use strict";(self.webpackChunk_dcentralab_web3_wallet_connector=self.webpackChunk_dcentralab_web3_wallet_connector||[]).push([[9674],{86293:(e,t,n)=>{n.r(t),n.d(t,{default:()=>S});var r=n(71823),o=n(17187),s=n.n(o),a={},i={},c=function(e,t){i[e]=t},d=function(e){var t=function(t,n){Object.assign(this,n),this.name=e,this.message=t||e,this.stack=(new Error).stack};return t.prototype=new Error,a[e]=t,t};d("AccountNameRequired"),d("AccountNotSupported"),d("AmountRequired"),d("BluetoothRequired"),d("BtcUnmatchedApp"),d("CantOpenDevice"),d("CashAddrNotSupported"),d("CurrencyNotSupported"),d("DeviceAppVerifyNotSupported"),d("DeviceGenuineSocketEarlyClose"),d("DeviceNotGenuine"),d("DeviceOnDashboardExpected"),d("DeviceOnDashboardUnexpected"),d("DeviceInOSUExpected"),d("DeviceHalted"),d("DeviceNameInvalid"),d("DeviceSocketFail"),d("DeviceSocketNoBulkStatus"),d("DisconnectedDevice"),d("DisconnectedDeviceDuringOperation"),d("EnpointConfig"),d("EthAppPleaseEnableContractData"),d("FeeEstimationFailed"),d("FirmwareNotRecognized"),d("HardResetFail"),d("InvalidXRPTag"),d("InvalidAddress"),d("InvalidAddressBecauseDestinationIsAlsoSource"),d("LatestMCUInstalledError"),d("UnknownMCU"),d("LedgerAPIError"),d("LedgerAPIErrorWithMessage"),d("LedgerAPINotAvailable"),d("ManagerAppAlreadyInstalled"),d("ManagerAppRelyOnBTC"),d("ManagerAppDepInstallRequired"),d("ManagerAppDepUninstallRequired"),d("ManagerDeviceLocked"),d("ManagerFirmwareNotEnoughSpace"),d("ManagerNotEnoughSpace"),d("ManagerUninstallBTCDep"),d("NetworkDown"),d("NoAddressesFound"),d("NotEnoughBalance"),d("NotEnoughBalanceToDelegate"),d("NotEnoughBalanceInParentAccount"),d("NotEnoughSpendableBalance"),d("NotEnoughBalanceBecauseDestinationNotCreated"),d("NoAccessToCamera"),d("NotEnoughGas"),d("NotSupportedLegacyAddress"),d("GasLessThanEstimate"),d("PasswordsDontMatch"),d("PasswordIncorrect"),d("RecommendSubAccountsToEmpty"),d("RecommendUndelegation"),d("TimeoutTagged"),d("UnexpectedBootloader"),d("MCUNotGenuineToDashboard"),d("RecipientRequired"),d("UnavailableTezosOriginatedAccountReceive"),d("UnavailableTezosOriginatedAccountSend"),d("UpdateFetchFileFail"),d("UpdateIncorrectHash"),d("UpdateIncorrectSig"),d("UpdateYourApp"),d("UserRefusedDeviceNameChange"),d("UserRefusedAddress"),d("UserRefusedFirmwareUpdate"),d("UserRefusedAllowManager"),d("UserRefusedOnDevice"),d("TransportOpenUserCancelled"),d("TransportInterfaceNotAvailable");var u=d("TransportRaceCondition");d("TransportWebUSBGestureRequired"),d("DeviceShouldStayInApp"),d("WebsocketConnectionError"),d("WebsocketConnectionFailed"),d("WrongDeviceForAccount"),d("WrongAppForCurrency"),d("ETHAddressNonEIP"),d("CantScanQRCode"),d("FeeNotLoaded"),d("FeeRequired"),d("FeeTooHigh"),d("SyncError"),d("PairingFailed"),d("GenuineCheckFailed"),d("LedgerAPI4xx"),d("LedgerAPI5xx"),d("FirmwareOrAppUpdateRequired"),d("NoDBPathGiven"),d("DBWrongPassword"),d("DBNotReset");function l(e,t){this.name="TransportError",this.message=e,this.stack=(new Error).stack,this.id=t}l.prototype=new Error,c("TransportError",(function(e){return new l(e.message,e.id)}));var p={PIN_REMAINING_ATTEMPTS:25536,INCORRECT_LENGTH:26368,MISSING_CRITICAL_PARAMETER:26624,COMMAND_INCOMPATIBLE_FILE_STRUCTURE:27009,SECURITY_STATUS_NOT_SATISFIED:27010,CONDITIONS_OF_USE_NOT_SATISFIED:27013,INCORRECT_DATA:27264,NOT_ENOUGH_MEMORY_SPACE:27268,REFERENCED_DATA_NOT_FOUND:27272,FILE_ALREADY_EXISTS:27273,INCORRECT_P1_P2:27392,INS_NOT_SUPPORTED:27904,CLA_NOT_SUPPORTED:28160,TECHNICAL_PROBLEM:28416,OK:36864,MEMORY_PROBLEM:37440,NO_EF_SELECTED:37888,INVALID_OFFSET:37890,FILE_NOT_FOUND:37892,INCONSISTENT_FILE:37896,ALGORITHM_NOT_SUPPORTED:38020,INVALID_KCV:38021,CODE_NOT_INITIALIZED:38914,ACCESS_CONDITION_NOT_FULFILLED:38916,CONTRADICTION_SECRET_CODE_STATUS:38920,CONTRADICTION_INVALIDATION:38928,CODE_BLOCKED:38976,MAX_VALUE_REACHED:38992,GP_AUTH_FAILED:25344,LICENSING:28482,HALTED:28586};function h(e){this.name="TransportStatusError";var t=Object.keys(p).find((function(t){return p[t]===e}))||"UNKNOWN_ERROR",n=function(e){switch(e){case 26368:return"Incorrect length";case 26624:return"Missing critical parameter";case 27010:return"Security not satisfied (dongle locked or have invalid access rights)";case 27013:return"Condition of use not satisfied (denied by the user?)";case 27264:return"Invalid data received";case 27392:return"Invalid parameter received"}if(28416<=e&&e<=28671)return"Internal error, please report"}(e)||t,r=e.toString(16);this.message="Ledger device: "+n+" (0x"+r+")",this.stack=(new Error).stack,this.statusCode=e,this.statusText=t}h.prototype=new Error,c("TransportStatusError",(function(e){return new h(e.statusCode)}));var g=n(48764).Buffer;class E{constructor(){this.exchangeTimeout=3e4,this.unresponsiveTimeout=15e3,this.deviceModel=null,this._events=new(s()),this.send=async(e,t,n,r,o=g.alloc(0),s=[p.OK])=>{if(o.length>=256)throw new l("data.length exceed 256 bytes limit. Got: "+o.length,"DataLengthTooBig");const a=await this.exchange(g.concat([g.from([e,t,n,r]),g.from([o.length]),o])),i=a.readUInt16BE(a.length-2);if(!s.some((e=>e===i)))throw new h(i);return a},this.exchangeBusyPromise=void 0,this.exchangeAtomicImpl=async e=>{if(this.exchangeBusyPromise)throw new u("An action was already pending on the Ledger device. Please deny or reconnect.");let t;const n=new Promise((e=>{t=e}));this.exchangeBusyPromise=n;let r=!1;const o=setTimeout((()=>{r=!0,this.emit("unresponsive")}),this.unresponsiveTimeout);try{const t=await e();return r&&this.emit("responsive"),t}finally{clearTimeout(o),t&&t(),this.exchangeBusyPromise=null}},this._appAPIlock=null}exchange(e){throw new Error("exchange not implemented")}setScrambleKey(e){}close(){return Promise.resolve()}on(e,t){this._events.on(e,t)}off(e,t){this._events.removeListener(e,t)}emit(e,...t){this._events.emit(e,...t)}setDebugMode(){console.warn("setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.")}setExchangeTimeout(e){this.exchangeTimeout=e}setExchangeUnresponsiveTimeout(e){this.unresponsiveTimeout=e}static create(e=3e3,t){return new Promise(((n,r)=>{let o=!1;const s=this.listen({next:t=>{o=!0,s&&s.unsubscribe(),a&&clearTimeout(a),this.open(t.descriptor,e).then(n,r)},error:e=>{a&&clearTimeout(a),r(e)},complete:()=>{a&&clearTimeout(a),o||r(new l(this.ErrorMessage_NoDeviceFound,"NoDeviceFound"))}}),a=t?setTimeout((()=>{s.unsubscribe(),r(new l(this.ErrorMessage_ListenTimeout,"ListenTimeout"))}),t):null}))}decorateAppAPIMethods(e,t,n){for(let r of t)e[r]=this.decorateAppAPIMethod(r,e[r],e,n)}decorateAppAPIMethod(e,t,n,r){return async(...o)=>{const{_appAPIlock:s}=this;if(s)return Promise.reject(new l("Ledger Device is busy (lock "+s+")","TransportLocked"));try{return this._appAPIlock=e,this.setScrambleKey(r),await t.apply(n,o)}finally{this._appAPIlock=null}}}}E.isSupported=void 0,E.list=void 0,E.listen=void 0,E.open=void 0,E.ErrorMessage_ListenTimeout="No Ledger device found (timeout)",E.ErrorMessage_NoDeviceFound="No Ledger device found";let T=0;const m=[],A=(e,t,n)=>{const r={type:e,id:String(++T),date:new Date};t&&(r.message=t),n&&(r.data=n),function(e){for(let t=0;t<m.length;t++)try{m[t](e)}catch(e){console.error(e)}}(r)},I=e=>(m.push(e),()=>{const t=m.indexOf(e);-1!==t&&(m[t]=m[m.length-1],m.pop())});"undefined"!=typeof window&&(window.__ledgerLogsListen=I);var N=n(48764).Buffer;const _=e=>e.replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"");function D(e,t,n,o){const s=function(e,t){const n=N.alloc(e.length);for(let r=0;r<e.length;r++)n[r]=e[r]^t[r%t.length];return n}(e,n),a=N.from("0000000000000000000000000000000000000000000000000000000000000000","hex"),i={version:"U2F_V2",keyHandle:_(s.toString("base64")),challenge:_(a.toString("base64")),appId:location.origin};return A("apdu","=> "+e.toString("hex")),(0,r.sign)(i,t/1e3).then((e=>{const{signatureData:t}=e;if("string"==typeof t){const e=N.from((n=t).replace(/-/g,"+").replace(/_/g,"/")+"==".substring(0,3*n.length%4),"base64");let r;return r=o?e.slice(5):e,A("apdu","<= "+r.toString("hex")),r}throw e;var n}))}let v=[];class S extends E{static async open(e,t=5e3){return new S}constructor(){super(),this.scrambleKey=void 0,this.unwrap=!0,v.push(this)}async exchange(e){try{return await D(e,this.exchangeTimeout,this.scrambleKey,this.unwrap)}catch(e){throw"object"==typeof e.metaData?(5===e.metaData.code&&(v.forEach((e=>e.emit("disconnect"))),v=[]),function(e,t,n){const r=new l(t,n);return r.originalError=e,r}(e,"Failed to sign with Ledger device: U2F "+e.metaData.type,"U2F_"+e.metaData.code)):e}}setScrambleKey(e){this.scrambleKey=N.from(e,"ascii")}setUnwrap(e){this.unwrap=e}close(){return Promise.resolve()}}S.isSupported=r.isSupported,S.list=()=>(0,r.isSupported)().then((e=>e?[null]:[])),S.listen=e=>{let t=!1;return(0,r.isSupported)().then((n=>{t||(n?(e.next({type:"add",descriptor:null}),e.complete()):e.error(new l("U2F browser support is needed for Ledger. Please use Chrome, Opera or Firefox with a U2F extension. Also make sure you're on an HTTPS connection","U2FNotSupported")))})),{unsubscribe:()=>{t=!0}}}}}]);